name: Build

# Controls when the workflow will run
on:
  # Scheduled workflows run on the latest commit on the default or base branch
  # schedule:
  #   - cron: '20 2 * * *' # Daily at 02:20

  push:
    branches:
      - feature/docker-multi-arch-support
    tags:
      - v*

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  build:
    if: github.repository == 'opf/openproject'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - base_prefix:
            platforms: linux/amd64
          - base_prefix: ppc64le/
            platforms: linux/ppc64le
            bim_support: false
    steps:
      # Get the repository's code
      - name: Checkout
        uses: actions/checkout@v3
      # https://github.com/docker/setup-qemu-action
      - name: Prepare docker files
        run: |
          cp ./docker/prod/Dockerfile ./Dockerfile
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          context: workflow
          images: |
            openproject/community
          # Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: ${{ matrix.platforms }}
          build-args: |
            BASE_PREFIX=${{ matrix.base_prefix }}
            BIM_SUPPORT=${{ matrix.bim_support }}
          pull: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
